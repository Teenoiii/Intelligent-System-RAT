import streamlit as st
import joblib
import pandas as pd
import numpy as np
import time

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• XGBoost
model_path = "models/xgboost_best_model.pkl"
model = joblib.load(model_path)

# ‡πÇ‡∏´‡∏•‡∏î Dataset ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î-‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
df = pd.read_csv("Housing.csv")
area_min = int(df["area"].min())
area_max = int(df["area"].max())

st.title("üè† Machine Learning Model Demo - Predict California House Price") 

st.write("üìå **‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤**")

# ‚úÖ **‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå + ‡∏õ‡∏£‡∏±‡∏ö UI**
area = st.number_input(f"üè† ‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (‡∏ï‡∏£.‡∏°.) (‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á {area_min} - {area_max})", 
                        min_value=area_min, max_value=area_max, value=(area_min + area_max) // 2)

bedrooms = st.slider("üõè ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô", 1, 10, 3)
bathrooms = st.slider("üöø ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", 1, 10, 2)
stories = st.slider("üè¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô", 1, 5, 2)
parking = st.slider("üöó ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ", 0, 5, 1)

# ‚úÖ **‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö Yes/No (‡πÉ‡∏ä‡πâ 1/0)**
mainroad_yes = st.checkbox("üõ£ ‡∏ö‡πâ‡∏≤‡∏ô‡∏ï‡∏¥‡∏î‡∏ñ‡∏ô‡∏ô‡πÉ‡∏´‡∏ç‡πà", value=True)
guestroom_yes = st.checkbox("üõã ‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å", value=False)
basement_yes = st.checkbox("üîΩ ‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô", value=False)
hotwaterheating_yes = st.checkbox("üî• ‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏≥‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô", value=False)
airconditioning_yes = st.checkbox("‚ùÑ ‡∏°‡∏µ‡πÅ‡∏≠‡∏£‡πå", value=True)
prefarea_yes = st.checkbox("üå≥ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ó‡∏≥‡πÄ‡∏•‡∏î‡∏µ", value=True)

# ‚úÖ **‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå (‡πÉ‡∏ä‡πâ Dropdown)**
furnishing_status = st.selectbox("üõã ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", ["‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå", "‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô", "‡∏°‡∏µ‡∏Ñ‡∏£‡∏ö"])
furnishingstatus_semi = 1 if furnishing_status == "‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô" else 0
furnishingstatus_unfurnished = 1 if furnishing_status == "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ü‡∏≠‡∏£‡πå‡∏ô‡∏¥‡πÄ‡∏à‡∏≠‡∏£‡πå" else 0

# ‚úÖ **‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà**
bathroom_ratio = round(bathrooms / bedrooms, 2) if bedrooms > 0 else 0
area_per_story = round(area / stories, 2) if stories > 0 else 0

# ‚úÖ **‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå**
if st.button("üìä Predict Price"):
    try:
        # ‚úÖ **‡∏™‡∏£‡πâ‡∏≤‡∏á placeholder ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•**
        placeholder = st.empty()

        placeholder.markdown("‚åõ **‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤...**")
        time.sleep(1)

        # ‚úÖ **‡πÅ‡∏™‡∏î‡∏á Progress Bar**
        placeholder.progress(0, "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
        time.sleep(1)
        placeholder.progress(50, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÇ‡∏°‡πÄ‡∏î‡∏•...")
        time.sleep(1)
        placeholder.progress(100, "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå...")
        time.sleep(1)

        # ‚úÖ **‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£**
        input_data = np.array([[area, bedrooms, bathrooms, stories, parking,
                                int(mainroad_yes), int(guestroom_yes), int(basement_yes),
                                int(hotwaterheating_yes), int(airconditioning_yes), int(prefarea_yes),
                                furnishingstatus_semi, furnishingstatus_unfurnished, bathroom_ratio, area_per_story]])

        df_input = pd.DataFrame(input_data, columns=model.feature_names_in_)

        # ‚úÖ **‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå**
        prediction = model.predict(df_input)[0]

        # ‚úÖ **‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå**
        placeholder.success(f"üè† ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå: {prediction:,.2f} ‡∏ö‡∏≤‡∏ó")
        time.sleep(2)

        # ‚úÖ **‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°**
        placeholder.empty()

    except Exception as e:
        st.error(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
